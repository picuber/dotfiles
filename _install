#!/bin/bash

prog=$0
err=false

prog_list() {
	echo -e Available programs:
	echo -e \\\tbash, ctags, dunst, firefox, flake8, fzf, git, gpg, i3, i3lock, i3status, nethack, ptpython, pyenv, rofi, rust, scripts, ssh, tmux, tridactyl, vim, xorg, zsh
	echo -e Special Targets:
	echo -e \\\tall: \<all above\>
	echo -e \\\tnox: bash, ctags, flake8, fzf, git, gpg, nethack, ptpython, pyenv, rust, scripts, ssh, tmux, vim, zsh
	echo -e \\\tx: dunst, firefox, i3, i3lock, i3status, rofi, tridactyl
}

usage() {
	echo Usage: $prog \<program\> \[program\]*
	prog_list
}

# param:
# $1 prog name
unknown() {
	echo [$1] skipped unknown program
}

# param:
# $1 prog name
# $2 file name/path
dupf() { # duplicate file, file already exists
	echo [$1] [$2] skipped: already exists
}

# param:
# $1 prog name
# $2 file name/path
insf() { # installed file
	echo [$1] [$2] installed
}

# param:
# $1 prog name
# $2 file name/path
rembl() { # removed broken link
	echo [$1] [$2] removed broken link to \'$3\'
}

# param:
# $1 prog name
# $2 file/directory name/path
creatf() {
	echo [$1] [$2] created
}

# param:
# $1 prog name
# $2 file target path
# $3 relative file source path
lnifne() { # link if not exists, if link broken overwrite
	if [ ! -e $2 ]; then
		if [ -L $2 ]; then
			link=$(readlink $2)
			rm $2 && rembl $1 $2 $link
		fi
		ln -s $3 $2 && insf $1 $2
	else
		dupf $1 $2
	fi
}

# param:
# $1 prog name
# $2 directory name
mdifne() {
	if [ ! -e $2 ]; then
		mkdir $2  && creatf $1 $2
	else
		dupf $1 $2
	fi
}

# param:
# $1 prog name
# $2 directory name
mdifnes() { # fail silently
	if [ ! -e $2 ]; then
		mkdir $2  && creatf $1 $2
	fi
}

if [ $# -lt 1 ]; then
	usage
	exit
fi

case $1 in
	-h|--help)
		usage
		exit
		;;
	-|--)
		echo unknown option $1
		echo Use \'$0 --help\' to show available programs
		exit
		;;
esac

while true; do
	if [ -z $1 ]; then
		break
	fi

	case $1 in
		all)
			set -- "$@" bash dunst firefox fzf git gpg i3 i3lock i3status nethack ptpython pyenv rofi scripts ssh tmux tridactyl xorg vim zsh
			;;
		nox)
			set -- "$@" bash fzf git gpg nethack ptpython pyenv scripts ssh tmux vim zsh
			;;
		x)
			set -- "$@" dunst firefox i3 i3lock i3status rofi tridactyl xorg
			;;
		bash)
			lnifne bash ~/.bash_aliases .dotfiles/bash_aliases
			lnifne bash ~/.bash_logout .dotfiles/bash_logout
			lnifne bash ~/.bashrc .dotfiles/bashrc
			;;
		ctags)
			git clone https://github.com/universal-ctags/ctags.git ~/.ctags
			(cd ~/.ctags && bash ~/.ctags/autogen.sh)
			(cd ~/.ctags && bash ~/.ctags/configure)
			(cd ~/.ctags && make)
			(cd ~/.ctags && sudo make install)
			;;
		dunst)
			mdifnes dunst ~/.config
			lnifne dunst ~/.config/dunst ~/.dotfiles/config/dunst
			;;
		firefox)
			mdifnes ~/Downloads
			mdifnes ~/Downloads/Installer
			mdifnes ~/Downloads/Installer/tar
			(cd ~/Downloads/Installer/tar && curl -L "https://download.mozilla.org/?product=firefox-latest-ssl&amp;os=linux64&amp;lang=en-GB" --output firefox-latest.tar.bz2)
			(cd ~/Downloads/Installer/tar && sudo tar -xf firefox-latest.tar.bz2 -C /opt)
			;;
		flake8)
			mdifnes flake8 ~/.config
			lnifne flake8 ~/.config/flake8 ~/.dotfiles/config/flake8
			;;
		fzf)
			git clone --depth 1 https://github.com/junegunn/fzf.git ~/.fzf
			~/.fzf/install --key-bindings --completion --no-update-rc --no-bash --no-fish
			;;
		git)
			lnifne git ~/.gitconfig .dotfiles/gitconfig
			lnifne git ~/.gitignore_global .dotfiles/gitignore_global
			lnifne git ~/.git_template .dotfiles/git_template
			;;
		gpg)
			mdifnes gpg ~/.gnupg
			lnifne gpg ~/.gnupg/dirmngr.conf ~/.dotfiles/gnupg/dirmngr.conf
			lnifne gpg ~/.gnupg/gpg.conf ~/.dotfiles/gnupg/gpg.conf
			lnifne gpg ~/.gnupg/gpg-agent.conf ~/.dotfiles/gnupg/gpg-agent.conf
			;;
		i3)
			mdifnes i3 ~/.config
			lnifne i3 ~/.config/i3 ~/.dotfiles/config/i3
			;;
		i3lock)
			mdifnes i3lock ~/.config
			lnifne i3lock ~/.config/i3lock ~/.dotfiles/config/i3lock
			;;
		i3status)
			mdifnes i3status ~/.config
			lnifne i3status ~/.config/i3status ~/.dotfiles/config/i3status
			;;
		nethack)
			lnifne nethack ~/.nethackrc .dotfiles/nethackrc
			;;
		ptpython)
			mdifnes ptpython ~/.config
			lnifne ptpython ~/.config/ptpython ~/.dotfiles/config/ptpython
			;;
		pyenv)
			curl https://pyenv.run | bash
			git clone https://github.com/pyenv/pyenv-virtualenv.git ~/.pyenv/plugins/pyenv-virtualenv
			;;
		rofi)
			mdifnes rofi ~/.config
			lnifne rofi ~/.config/rofi ~/.dotfiles/config/rofi
			;;
		rust)
			curl -sSf https://sh.rustup.rs | sh
			rustup component add rls rust-analysis rust-src clippy
			;;
		scripts)
			lnifne scripts ~/scripts .dotfiles/scripts
			;;
		ssh)
			mdifnes ssh ~/.ssh
			lnifne ssh ~/.ssh/config ~/.dotfiles/ssh/config
			;;
		tmux)
			lnifne tmux ~/.tmux.conf .dotfiles/tmux.conf
			git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm
			tmux source-file ~/.tmux.conf
			;;
		tridactyl)
			mdifnes tridactyl ~/.config
			lnifne tridactyl ~/.config/tridactyl ~/.dotfiles/config/tridactyl
			;;
		xorg)
			mdifne xorg/urxvt ~/.urxvt
			mdifne xorg/urxvt ~/.urxvt/ext
			lnifne xorg/urxvt ~/.urxvt/ext/font-size ~/.dotfiles/urxvt/ext/font-size
			lnifne xorg/inputrc ~/.inputrc .dotfiles/inputrc
			lnifne xorg ~/.xinitrc .dotfiles/xinitrc
			lnifne xorg ~/.Xresources .dotfiles/Xresources
			;;
		vim)
			lnifne vim ~/.vimrc .dotfiles/vimrc
			mdifne vim ~/.vim
			lnifne vim ~/.vim/dictionaries ~/.dotfiles/vim/dictionaries
			lnifne vim ~/.vim/ftplugin ~/.dotfiles/vim/ftplugin
			lnifne vim ~/.vim/UltiSnips ~/.dotfiles/vim/UltiSnips
			mdifne vim ~/.vim/backups
			mdifne vim ~/.vim/swaps
			;;
		zsh)
			mdifne zsh ~/.zsh-antigen
			curl -L git.io/antigen > ~/.zsh-antigen/antigen.zsh
			lnifne zsh ~/.zshrc .dotfiles/zshrc
			lnifne zsh/compleat ~/.compleat .dotfiles/compleat
			;;
		*)
			unknown $1
			;;
	esac
	shift
done
