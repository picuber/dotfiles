	" automatically install vim-plug, if not already installed
if empty(glob('~/.vim/autoload/plug.vim'))
  silent !curl -fLo ~/.vim/autoload/plug.vim --create-dirs
    \ https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
  autocmd VimEnter * PlugInstall --sync | source $MYVIMRC
endif


call plug#begin('~/.vim/plugged')
"-----vim-plug-----"
Plug 'junegunn/vim-plug'	" added as plugin for vim help (https://github.com/junegunn/vim-plug/wiki/tips)

"-----tpope-----"
Plug 'tpope/vim-repeat'
Plug 'tpope/vim-surround'
Plug 'tpope/vim-commentary'
Plug 'tpope/vim-obsession'
Plug 'tpope/vim-unimpaired'

"-----look_and_feel-----"
Plug 'flazz/vim-colorschemes'
Plug 'itchyny/lightline.vim'

"-----functionality-----"
Plug 'maralla/completor.vim'
Plug 'simnalamburt/vim-mundo'
Plug 'AndrewRadev/switch.vim'
Plug 'scrooloose/nerdtree'
Plug 'Xuyuanp/nerdtree-git-plugin'
Plug 'jeffkreeftmeijer/vim-numbertoggle'

"-----snippets-----"
Plug 'SirVer/ultisnips'
Plug 'honza/vim-snippets'

"-----syntax-----"
" Plug 'scrooloose/syntastic'
Plug 'dense-analysis/ale'


"-----editing-----"
Plug 'jiangmiao/auto-pairs'
Plug 'alvan/vim-closetag'
Plug 'bronson/vim-trailing-whitespace'
Plug 'tweekmonster/braceless.vim'
Plug 'dhruvasagar/vim-table-mode'
Plug 'mattn/emmet-vim'			"expanding abbreviations for HTML/CSS

"-----tools-----"
" Plug 'vimwiki/vimwiki'

"-----pandoc-----"
Plug 'vim-pandoc/vim-pandoc'
Plug 'vim-pandoc/vim-pandoc-syntax'
Plug 'vim-pandoc/vim-pandoc-after'
Plug 'vim-pandoc/vim-markdownfootnotes'

"-----program integration-----"
Plug 'KabbAmine/zeavim.vim'		"zeal
Plug 'junegunn/fzf.vim'			"fzf
Plug 'preservim/tagbar'			"ctags
Plug 'airblade/vim-gitgutter'	"git

"-----language server protocol-----"
" Plug 'prabirshrestha/async.vim'
" Plug 'prabirshrestha/vim-lsp'
" Plug 'mattn/vim-lsp-settings'

"-----languages-----"
" Plug 'rust-lang/rust.vim'		"rust
" Plug 'lervag/vimtex'			"LaTeX / TeX
Plug 'cplaursen/vim-isabelle'	"Isabelle


call plug#end()

packadd! matchit	" match % for HTML, LaTeX, etc


"-----NERDTree-----"
" show hidden files
let NERDTreeShowHidden=1

" -----lightline.vim-----"
 set noshowmode
 let g:lightline = {
 			\ 'colorscheme': 'deus',
 			\ 'active': {
 		    \	'left': [ [ 'mode', 'paste' ],
 		    \			  [ 'readonly', 'buffertype', 'relativepath', 'modified' ] ],
 		    \	'right': [ [ 'lineinfo' ],
 		    \              [ 'percent' ],
 		    \              [ 'charvaluehex', 'fileformat', 'fileencoding', 'filetype' ] ] },
 			\ 'inactive': {
 		    \	'left': [ [ 'readonly', 'filename', 'modified' ] ],
 		    \	'right': [ [ 'lineinfo' ],
 		    \			   [ 'percent' ] ] },
 			\ 'component': {
 			\	'charvaluehex': '%<0x%B',
 			\	'buffertype': '%H%W' },
 			\ 'component_visible_condition': {
 			\	'buffertype': '&buftype=="help"||&previewwindow '}
 			\ }

"-----ALE-----"
" set linters explicitly (via ftplugins)
let g:ale_linters_explicit=1

""-----Syntastic-----"
"" set statusline+=%#warningmsg#
"" set statusline+=%{SyntasticStatuslineFlag()}
"" set statusline+=%*

"let g:syntastic_always_populate_loc_list = 1
"let g:syntastic_auto_loc_list = 1
"let g:syntastic_check_on_open = 1
"let g:syntastic_check_on_wq = 0

"let g:syntastic_python_python_exec = 'python3'
"" let g:syntastic_nasm_nasm_exec = 'nasm -f elf64 -lc'

"let g:syntastic_python_checkers=["python", "flake8", "mypy"]
"let g:syntastic_python_flake8_args="--ignore=E741"	" disable 'ambiguous variable name' error

"-----Utilsnips-----"
let g:UltiSnipsExpandTrigger="<leader>e"
let g:UltiSnipsJumpForwardTrigger="<leader>u"
let g:UltiSnipsJumpBackwardTrigger="<leader>U"

let g:UltiSnipsEditSplit="context"
let g:UltiSnipsSnippetDirectories=["UltiSnips"]
let g:UltiSnipsSnippetsDir = "~/.vim/UltiSnips"
let g:UltiSnipsEnableSnipMate = 0

"-----GitGutter-----""
let g:gitgutter_map_keys = 0

"-----Switch.vim-----""
let g:switch_mapping="<leader>l"
let g:switch_reverse_mapping="<leader>h"
autocmd FileType java let b:switch_custom_definitions =
			\ [
			\	['private', 'public', 'protected']
			\ ]

"-----vimtex-----"
" disable for now
" let g:vimtex_enabled = 0

"-----Tagbar-----"
let g:tagbar_autofocus=1
let g:tagbar_autoclose=1

"-----rust.vim-----"
" let g:rustfmt_autosave=1

"-----fzf-----"
set rtp+=~/.fzf

"-----vim-table-mode-----"
let g:table_mode_tableize_map="<Leader>tz"

"-----vim-pandoc-syntax-----"
let g:pandoc#syntax#conceal#urls=1

"-----vim-pandoc-after-----"
let g:pandoc#after#modules#enabled = ["ultisnips"]

"-----vim-closetag-----"
let g:closetag_filenames = '*.html,*.xhtml,*.phtml'
let g:closetag_xhtml_filenames = '*.xhtml,*.jsx'
let g:closetag_filetypes = 'html,xhtml,phtml'
let g:closetag_xhtml_filetypes = 'xhtml,jsx'
let g:closetag_emptyTags_caseSensitive = 1
let g:closetag_regions = {
    \ 'typescript.tsx': 'jsxRegion,tsxRegion',
    \ 'javascript.jsx': 'jsxRegion',
    \ }
let g:closetag_shortcut = '>'
let g:closetag_close_shortcut = '<leader>>'

"-----emmet-vim-----"
let g:user_emmet_install_global=0
autocmd FileType html,css EmmetInstall
let g:user_emmet_leader_key='<leader>m'

" vim:set ft=vim:
